name: Release to NuGet

on:
  release:
    types: [published]

env:
  PROJECT: 'DotNetLibrary'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        include-prerelease: true
        
    - name: Create NuGet Package
      run: dotnet pack -c Release --include-symbols /p:Version=${{ github.event.release.tag_name }} /p:PackageReleaseNotes="See https://github.com/daemogar/DotNetLibrary/releases/tag/${{ github.event.release.tag_name }}"
      working-directory: ./${{ env.PROJECT }}.Core
    - name: Archive Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.PROJECT }}
        path: ./${{ env.PROJECT }}.Core/bin/Release/${{ env.PROJECT }}.${{ github.event.release.tag_name }}.nupkg
    - name: Archive Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.PROJECT }}
        path: ./${{ env.PROJECT }}.Core/bin/Release/${{ env.PROJECT }}.${{ github.event.release.tag_name }}.snupkg
    
    - name: Create NuGet Package
      run: dotnet pack -c Release --include-symbols /p:Version=${{ github.event.release.tag_name }} /p:PackageReleaseNotes="See https://github.com/daemogar/DotNetLibrary/releases/tag/${{ github.event.release.tag_name }}"
      working-directory: ./${{ env.PROJECT }}.Client
    - name: Archive Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.PROJECT }}.Client
        path: ./${{ env.PROJECT }}.Client/bin/Release/${{ env.PROJECT }}.Client.${{ github.event.release.tag_name }}.nupkg
    - name: Archive Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.PROJECT }}.Client
        path: ./${{ env.PROJECT }}.Client/bin/Release/${{ env.PROJECT }}.Client.${{ github.event.release.tag_name }}.snupkg

    - name: Create NuGet Package
      run: dotnet pack -c Release --include-symbols /p:Version=${{ github.event.release.tag_name }} /p:PackageReleaseNotes="See https://github.com/daemogar/DotNetLibrary/releases/tag/${{ github.event.release.tag_name }}"
      working-directory: ./${{ env.PROJECT }}.Server
    - name: Archive Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.PROJECT }}.Server
        path: ./${{ env.PROJECT }}.Server/bin/Release/${{ env.PROJECT }}.Server.${{ github.event.release.tag_name }}.nupkg
    - name: Archive Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.PROJECT }}.Server
        path: ./${{ env.PROJECT }}.Server/bin/Release/${{ env.PROJECT }}.Server.${{ github.event.release.tag_name }}.snupkg

  unlist:
    runs-on: windows-latest
    
    steps:
    - name: Unlist NuGet Packages
      uses: darenm/unlist-nuget@v1
      with:
        NUGET_PACKAGE: ${{ env.PROJECT }}.Core
        VERSION_REGEX: ^.+-alpha.+
        NUGET_KEY: ${{ secrets.NUGETPACKAGEAPIKEY }}
      
    - name: Unlist NuGet Packages
      uses: darenm/unlist-nuget@v1
      with:
        NUGET_PACKAGE: ${{ env.PROJECT }}.Client
        VERSION_REGEX: ^.+-alpha.+
        NUGET_KEY: ${{ secrets.NUGETPACKAGEAPIKEY }}
      
    - name: Unlist NuGet Packages
      uses: darenm/unlist-nuget@v1
      with:
        NUGET_PACKAGE: ${{ env.PROJECT }}.Server
        VERSION_REGEX: ^.+-alpha.+
        NUGET_KEY: ${{ secrets.NUGETPACKAGEAPIKEY }}
        
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Publish NuGet Package
      run: dotnet nuget push **/*.nupkg -k ${{ secrets.NUGETPACKAGEAPIKEY }} -s https://api.nuget.org/v3/index.json
