name: Release to NuGet

on: push

env:
  PROJECT: 'DotNetLibrary'

jobs:    
  build:
    runs-on: ubuntu-latest
    
    strategy:
      max-parallel: 1
      matrix:
        dotnet-version: [ 5.0.x, 6.0.x ]
        include-prerelease: [ false, true ]
        project-name: [ Core, Client, Server ]
        
        exclude:
          - dotnet-version: 6.0.x
            include-prerelease: false
          - dotnet-version: 5.0.x
            include-prerelease: true
            
    continue-on-error: ${{ matrix.include-prerelease }}
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET (${{ matrix.dotnet-version }})
      uses: actions/setup-dotnet@v1
      env:
        RELEASE_NAME: ${{ env.PROJECT }}.${{ matrix.project-name }}
      
    - name: NuGet Package (${{ env.RELEASE_NAME }})
      env:
        RELEASE_PATH: ./${{ env.RELEASE_NAME }}/bin/Release/${{ env.PROJECT }}.${{ github.event.release.tag_name }}
        RELEASE_NOTE: https://github.com/daemogar/DotNetLibrary/releases/tag/${{ github.event.release.tag_name }}
      run: |
        dotnet pack -c Release --include-symbols |
          /p:Version=${{ github.event.release.tag_name }} |
          /p:PackageReleaseNotes="See ${{ env.RELEASE_NOTE }}"
      working-directory: ./${{ env.RELEASE_NAME }}
   
    - name: Archive Artifacts (NUPKG)
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.PROJECT }}
        path: ${{ env.RELEASE_PATH }}.nupkg
   
    - name: Archive Artifacts (SNUPKG)
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.PROJECT }}
        path: ${{ env.RELEASE_PATH }}.snupkg
    
