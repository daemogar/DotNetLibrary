name: Release to NuGet

on: push

env:
  PROJECT: 'DotNetLibrary'
  VERSION: ${{ github.event.release.tag_name || '0.0.0' }}

jobs:    
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        project-name: [ Core, Client, Server ]
        
    steps:
    - uses: actions/checkout@v2
    
    - name: Set Release Name
      uses: allenevans/set-env@v2.0.0
      with:
        RELEASE_NAME: ${{ env.PROJECT }}.${{ matrix.project-name }}
      
    - name: Set Release Path
      uses: allenevans/set-env@v2.0.0
      with:
        RELEASE_PATH: ./${{ env.RELEASE_NAME }}/bin/Release/${{ env.PROJECT }}.${{ env.VERSION }}
      
    - name: Setup .NET (5.0.x)
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    
    - name: Setup .NET (6.0.x)
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        include-prerelease: true
        
    - name: NuGet Package (${{ env.RELEASE_NAME }})
      env:
        RELEASE_NOTE: https://github.com/daemogar/${{ env.PROJECT }}/releases/tag/${{ env.VERSION }}
      run: dotnet pack -c Release --include-symbols /p:Version=${{ env.VERSION }} /p:PackageReleaseNotes="See ${{ env.RELEASE_NOTE }}"
      working-directory: ./${{ env.PROJECT }}.${{ matrix.project-name }}
   
    - name: Archive Artifacts (NUPKG)
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.PROJECT }}
        path: ${{ env.RELEASE_PATH }}.nupkg
   
    - name: Archive Artifacts (SNUPKG)
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.PROJECT }}
        path: ${{ env.RELEASE_PATH }}.snupkg
    
